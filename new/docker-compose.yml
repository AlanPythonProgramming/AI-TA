services:
  # Your Python/Streamlit service
  tutor-app:
    build: .
    container_name: tutor_app
    ports:
      - "8501:8501"   # expose streamlit externally
    environment:
      - MONGO_URI=mongodb://mongo:27017/comp1531_testing
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VOYAGE_API_KEY=${VOYAGE_API_KEY}
    volumes:
      - .:/app  # optional, if you want local dev changes to be reflected
      - ./comp1531:/comp1531
    depends_on:
      elasticsearch:
        condition: service_healthy
      mongo:
        condition: service_healthy
    restart: unless-stopped

  # Elasticsearch service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.2
    container_name: es_container
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # I tried adding this health check: ["CMD-SHELL", "curl -f http://localhost:8000/api/v2/heartbeat || exit 1"]
  # chromadb:
  #   image: chromadb/chroma:1.0.0b0
  #   container_name: chroma_container
  #   volumes:
  #     - ./comp1531:/chroma/chroma
  #   ports:
  #     - "8000:8000"
  #   restart: always  # Ensures it restarts if it crashes

  # MongoDB service
  mongo:
    image: mongo:6.0
    container_name: mongo_container
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  mongo_data:
    driver: local
